var data = [14689, 10429, 8562, 7445, 6815, 6504, 6215, 5613, 5580, 5068, 4783, 4752, 4320, 4278, 4181, 4076, 4020, 3861, 3852, 3517, 3488, 3480, 3386, 3356, 3177, 3142, 3062, 3009, 2986, 2984, 2972, 2953, 2900, 2896, 2682, 2580, 2574, 2566, 2468, 2420, 2416, 2401, 2367, 2285, 2270, 2266, 2250, 2237, 2198, 2178, 2176, 2170, 2136, 2117, 2112, 2074, 2051, 2031, 1987, 1970, 1966, 1964, 1962, 1941, 1940, 1940, 1929, 1925, 1917, 1895, 1883, 1865, 1860, 1817, 1813, 1793, 1791, 1761, 1741, 1731, 1726, 1669, 1657, 1646, 1637, 1620, 1617, 1598, 1593, 1580, 1554, 1543, 1535, 1531, 1529, 1529, 1523, 1520, 1504, 1500, 1474, 1464, 1460, 1446, 1438, 1420, 1410, 1410, 1409, 1397, 1370, 1353, 1353, 1350, 1344, 1341, 1334, 1317, 1315, 1302, 1285, 1283, 1283, 1281, 1272, 1256, 1225, 1182, 1178, 1175, 1171, 1134, 1124, 1118, 1111, 1109, 1106, 1091, 1080, 1072, 1057, 1046, 1018, 1013, 1005, 1005, 1003, 992, 986, 975, 966, 962, 962, 936, 932, 918, 914, 912, 900, 894, 887, 887, 885, 883, 881, 878, 861, 853, 834, 823, 789, 773, 765, 762, 738, 716, 711, 694, 692, 684, 681, 671, 647, 640, 624, 606, 601, 597, 593, 575, 573, 567, 549, 544, 542, 518, 513, 479, 477, 469, 415, 400, 349, 302, 287, 189, 93];

function group (data, step) {
	var result = [], t, i;
	data.map(function (d) {
		var index = Math.floor(d / step);
		result[index] = result[index] || 0;
		result[index] += 1;
	});
	t = result.length;
	for (i = 0; i < t; i++) result[i] = result[i] || 0;
	return result;
}
function analyze (data) {
	var pos = 0, neg = 0, t = data.length, i, value, p;
	for (i = 1; i < t; i++) {
		value = data[i] - data[i - 1];
		if (data[i] > data[i - 1]) pos += value;
		else if (data[i] < data[i - 1]) neg -= value;
	}
	t = Math.log(t); // Detail Rate
	p = Math.abs(neg - pos) / (neg + pos); // Signal-Noise Ratio
	p = -p * Math.log(p); // Entropy
	return [pos, neg, p * t, Math.abs(neg - pos) / (neg + pos), t];
}

var step = 5, maxA = -1, maxI = maxA, j, dis;
for (i = step; i < 5000; i += step) {
	j = analyze(group(data, i));
	if (j[2] > maxA) {
		maxA = j[2];
		maxI = i;
	}
}
dis = group(data, maxI);
console.log(dis);
console.log(maxI, analyze(dis));